<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.safeinventory.mapper.InventoryMapper">

    <!-- 根据 product_id 查询库存 -->
    <select id="selectByProductId" resultType="com.example.safeinventory.model.InventoryModel" parameterType="Integer">
        SELECT id,
               product_id AS productId,
               total_stock,
               available_stock,
               reserved_stock,
               version,
               create_time,
               update_time
        FROM inventory
        WHERE product_id = #{productId}
    </select>

    <!-- 根据 product_id 查询库存并加锁 -->
    <select id="selectByProductIdForUpdate" resultType="com.example.safeinventory.model.InventoryModel"
            parameterType="Integer">
        SELECT id,
               product_id,
               total_stock,
               available_stock,
               reserved_stock,
               version,
               create_time,
               update_time
        FROM inventory
        WHERE product_id = #{productId} FOR UPDATE
    </select>

    <!-- 预留库存，减少 available_stock 并增加 reserved_stock -->
    <update id="reserveStock" parameterType="map">
        UPDATE inventory
        SET available_stock = available_stock - #{quantity},
            reserved_stock  = reserved_stock + #{quantity}
        WHERE product_id = #{productId}
    </update>

    <!-- 通过检查库存来预留库存 -->
    <update id="reserveStockByCheckingStock" parameterType="map">
        UPDATE inventory
        SET available_stock = available_stock - #{quantity},
            reserved_stock  = reserved_stock + #{quantity}
        WHERE product_id = #{productId}
          AND available_stock >= #{quantityAtLeast}
    </update>

    <!-- 使用乐观锁版本控制预留库存 -->
    <update id="reserveStockWithVersion" parameterType="map">
        UPDATE inventory
        SET available_stock = available_stock - #{quantity},
            reserved_stock  = reserved_stock + #{quantity},
            version         = version + 1
        WHERE product_id = #{productId}
          AND version = #{version}
    </update>

    <!-- 确认库存，减少 reserved_stock -->
    <update id="confirmStock" parameterType="map">
        UPDATE inventory
        SET reserved_stock = reserved_stock - #{reservedStock}
        WHERE product_id = #{productId}
    </update>

    <!-- 回滚库存，增加 reserved_stock -->
    <update id="rollbackStock" parameterType="map">
        UPDATE inventory
        SET reserved_stock = reserved_stock - #{reservedStock},
         available_stock = available_stock + #{reservedStock}
        WHERE product_id = #{productId}
    </update>
</mapper>
